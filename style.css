* {
  padding: 0;
  margin: 0;
  border: 0;
  box-sizing: border-box;
}

:root {
  font-size: 6.25%;
  --ff-timer: 'Roboto', sans-serif;

  /* Light Mode colors */
  --bg-body: white;
  --bg-primary-color: hsl(240, 9%, 89%);
  --bg-emphasis: hsl(194, 97%, 31%);
  --fc-primary-color: hsl(240, 6%, 21%);
  --fc-icon-emphasis: white;
  /*  
    Dark Mode colors are NOT BEING USED here.
    Colors of the dark mode are being changed by javascript
    here im just "storign" them 
  */
  --bg-body-darkmode: black;
  --bg-primary-color-darkmode: hsl(240, 9%, 21%);
  --bg-emphasis-darkmode: hsl(194, 97%, 31%);
  --fc-primary-color-darkmode: hsl(240, 6%, 89%);
  --fc-icon-emphasis-darkmode: white;

  /* to avoid repetition for the animations / below */
  --animation-duration: 1.2s;
  --animation-delay: 0.2s;
  --animation-timing-function: ease-in-out;
  --animation-fill-mode: backwards;
}

body {
  background-color: var(--bg-body);
  font-size: 16rem;
  font-family: var(--ff-timer);
  display: grid;
  align-items: center;
  height: 100vh;
  position: relative;
}

main {
  display: flex;
  gap: clamp(30rem, 8vw, 192rem);
  justify-content: center;
  align-items: center;
  height: fit-content;
  margin-top: 8px;
}

.timer-section {
  display: flex;
  flex-direction: column;
  gap: 18rem;
  animation-name: left-to-right;
  animation-duration: var(--animation-duration);
  animation-delay: var(--animation-delay);
  animation-timing-function: var(--animation-timing-function);
  animation-fill-mode: var(--animation-fill-mode);
}

.timer-display {
  font-size: clamp(80rem, 17vw, 130rem);
  /* font-size: 126rem; */
  font-weight: 500;
  color: var(--fc-primary-color);
}

.panel-controls {
  display: flex;
  justify-content: space-around;
}

.btn-control,
.btn-lightmode-on,
.btn-darkmode-on {
  background: none;
  display: flex;
  position: relative;
  flex-direction: column;
  gap: 8rem;
  justify-content: flex-end;
  align-items: center;
  align-content: center;
}

.btn-control::after,
.btn-lightmode-on::after,
.btn-darkmode-on::after {
  content: '';
  background-color: var(--bg-emphasis);
  display: block;
  justify-self: flex-end;
  position: absolute;
  height: 4px;
  width: 0%;
  --margin-bottom: -12px;
  margin-bottom: var(--margin-bottom);
  transition: all 0.1s ease-in-out;
}

.btn-control:hover::after,
.btn-lightmode-on:hover::after,
.btn-darkmode-on:hover::after {
  align-self: center;
  border-radius: 999px;
  width: 100%;
}

.btn-control:active::after,
.btn-lightmode-on:active::after,
.btn-darkmode-on:active::after {
  opacity: 0.4;
  border-radius: 999px;
  width: 100%;
  height: 100%;
  margin-bottom: 0;
}

.btn-control svg path {
  fill: var(--fc-primary-color);
}

.sounds-section {
  display: grid;
  grid-template-areas:
    'A B'
    'C D';
  gap: clamp(14rem, 4vw, 32rem);
  animation-name: right-to-left;
  animation-duration: var(--animation-duration);
  animation-delay: var(--animation-delay);
  animation-timing-function: var(--animation-timing-function);
  animation-fill-mode: var(--animation-fill-mode);
}

.btn-sound {
  background-color: var(--bg-primary-color);

  width: clamp(50rem, 20vw, 138rem);
  /* width: 138rem; */
  height: clamp(55rem, 22vw, 152rem);
  /* height: 152rem; */
  border-radius: 24rem;
  transition: all 0.8s ease-out;
}

.btn-sound:hover {
  background-color: var(--bg-emphasis);
}

.btn-sound svg {
  display: inline;
  width: 46rem;
  height: 48rem;
  /* in HTML dimensions are:
  width: 45rem;
  height: 56rem; */
}

.btn-control svg {
  display: inline;
  width: 48rem;
  height: 48rem;
}

.btn-sound svg path {
  fill: var(--fc-primary-color)
}

.btn-sound:hover svg path {
  fill: var(--fc-icon-emphasis);
}

.theme-wrapper {
  position: absolute;
  top: clamp(18px, 8vw, 90px);
  /* top: 30px; */
  right: clamp(18px, 8vw, 90px);
  /* right: 30px; */
}

.btn-lightmode-on svg {
  display: inline;
}
.btn-lightmode-on svg path {
  fill: var(--fc-primary-color);
}

.btn-darkmode-on svg {
  display: inline;
  width: 100%;
}
.btn-lightmode-on svg path {
  fill: var(--fc-primary-color);
}

@keyframes left-to-right {
  0% {
    opacity: 0;
    transform: translateX(-20rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes right-to-left {
  0% {
    opacity: 0;
    transform: translateX(20rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@media (max-width: 732px) {
  main {
    flex-direction: column;
    gap: 60rem;
  }

  .timer-display {
    font-size: clamp(80rem, 30vw, 130rem);
  }

  .sounds-section {
    gap: 32rem;
  }

  .btn-sound {
    width: clamp(50rem, 33vw, 138rem);
    height: clamp(55rem, 39vw, 152rem);
  }

  .btn-control svg {
    width: clamp(20rem, 12vw, 48rem);
    /* width: 48rem; */
  }

  .btn-sound svg {
    width: clamp(16rem, 10vw, 46rem);
    /* width: 46rem; */
  }
}

@media (max-width: 1024px) {
  body {
    grid-template-rows: auto auto;
  }

  .theme-wrapper {
    align-self: flex-start;
    justify-self: center;
    margin: 0;
    padding: clamp(4px, 6vh, 32px);
    position: initial;
  }
}

.hide {
  display: none;
}
